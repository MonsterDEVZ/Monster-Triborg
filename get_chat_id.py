"""
–í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
"""
import asyncio
import logging
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message
from aiogram.filters import Command
from packages.core.utils.config import config

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

router = Router()


@router.message(Command("start"))
@router.message(F.text)
async def get_chat_id_handler(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è Chat ID"""
    chat_id = message.chat.id
    user_id = message.from_user.id
    username = message.from_user.username or "–Ω–µ—Ç username"
    first_name = message.from_user.first_name or ""

    response = (
        f"‚úÖ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ:</b>\n\n"
        f"üë§ –ò–º—è: {first_name}\n"
        f"üÜî Username: @{username}\n"
        f"üìã User ID: <code>{user_id}</code>\n"
        f"üí¨ Chat ID: <code>{chat_id}</code>\n\n"
        f"<b>–î–ª—è –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:</b>\n"
        f"<code>ADMIN_CHAT_ID={chat_id}</code>\n\n"
        f"üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —á–∏—Å–ª–æ <code>{chat_id}</code> –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª"
    )

    await message.answer(response, parse_mode="HTML")

    logger.info(f"üìã Chat ID –¥–ª—è .env: {chat_id}")
    logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {first_name} (@{username})")


async def main():
    bot = Bot(token=config.BOT_TOKEN)
    dp = Dispatcher()
    dp.include_router(router)

    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    logger.info("üì± –û—Ç–∫—Ä–æ–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –∏–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    logger.info("üìã –í—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à Chat ID")
    logger.info("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot)
    finally:
        await bot.session.close()


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
